// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using GoogleAnalytics.iOS;
using MyStarStable.Common;

namespace MyStarStable.iOS
{
	public partial class SettingsViewController : UIViewController
	{
		string editProfileURL 		= "APP/OPTIONS/EDITPROFILE/URL".Localize();
		string changePasswordURL 	= "APP/OPTIONS/CHANGEPASSWORD/URL".Localize();
		string blogURL 				= "APP/OPTIONS/BLOG/URL".Localize();
		string privacyPolicyURL 	= "APP/OPTIONS/PRIVACYPOLICY/URL".Localize();

		string editProfileLabel 	= "APP/OPTIONS/EDITPROFILE/LABEL".Localize();
		string changePasswordLabel 	= "APP/OPTIONS/CHANGEPASSWORD/LABEL".Localize();
		string blogLabel 			= "APP/OPTIONS/BLOG/LABEL".Localize();
		string privacyPolicyLabel 	= "APP/OPTIONS/PRIVACYPOLICY/LABEL".Localize();

		public SettingsViewController (IntPtr handle) : base (handle)
		{
		}


		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

		}
			
		public override void ViewDidAppear(bool animated)
		{
			 
		}
		public override void ViewWillAppear(bool animated)
		{
			base.ViewWillAppear(animated);


			GAI.SharedInstance.DefaultTracker.Set(GAIConstants.ScreenName, "Options Screen");
			GAI.SharedInstance.DefaultTracker.Send(GAIDictionaryBuilder.CreateScreenView().Build());

			editProfileButton.SetTitle (editProfileLabel, UIControlState.Normal);
			changePasswordButton.SetTitle (changePasswordLabel, UIControlState.Normal);
			blogButton.SetTitle (blogLabel, UIControlState.Normal);
			privacyPolicyButton.SetTitle (privacyPolicyLabel, UIControlState.Normal);

			editProfileButton.TouchUpInside += (object sender, EventArgs e) => {
				openWeb(editProfileURL);
			};
			changePasswordButton.TouchUpInside += (object sender, EventArgs e) => {
				openWeb(changePasswordURL);
			};
			blogButton.TouchUpInside += (object sender, EventArgs e) => {
				openWeb(blogURL);
			};
			privacyPolicyButton.TouchUpInside += (object sender, EventArgs e) => {
				openWeb(privacyPolicyURL);
			};
			logoutButton.TouchUpInside += (object sender, EventArgs e) => {
				// This happens when we come from the "sign out" buttons.
				if (StableSession.Instance.IsActive)
				{
					StableSession.Instance.Close(true);
					Interfaces.Instance.FacebookInterface.Close(true);

					MailHelper.Reset();
					CalendarHelper.Reset();

					LoginViewController myController = this.Storyboard.InstantiateViewController("LoginViewController") as LoginViewController;

					if (myController != null)
					{
						this.NavigationController.PresentModalViewController (myController, true);
					}
				}
			};
		}

		private void openWeb(string URL) {


			WebViewController myController = this.Storyboard.InstantiateViewController("WebViewController") as WebViewController;

			if (myController != null)
			{
				//myController.ModalPresentationStyle = UIModalPresentationStyle.FormSheet;
				myController.webURL = URL;
				this.NavigationController.PushViewController (myController, true);
			}


		}

		


	}
}
