// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Globalization;
using Foundation;
using MyStarStable.Common;
using UIKit;

namespace MyStarStable.iOS
{
    public class AttendeeDataSource : UITableViewSource
    {
        public static Dictionary<CalendarEventAttendee.AttendeeStatus, int> StatusToList = new Dictionary<CalendarEventAttendee.AttendeeStatus, int>
        {
	        {CalendarEventAttendee.AttendeeStatus.Accepted, 0},
	        {CalendarEventAttendee.AttendeeStatus.Invited, 1},
	        {CalendarEventAttendee.AttendeeStatus.Rejected, 2},
            {CalendarEventAttendee.AttendeeStatus.Owner, 3},
        };

        public readonly List<CalendarEventAttendee>[] AttendeeLists = new List<CalendarEventAttendee>[4]
        {
            new List<CalendarEventAttendee>(),
            new List<CalendarEventAttendee>(),
            new List<CalendarEventAttendee>(),
            new List<CalendarEventAttendee>()
        };

        private readonly string[] _sectionHeaders =
        {
            "APP/CAL/ATTENDEE_ACCEPTED".Localize(), 
            "APP/CAL/ATTENDEE_PENDING".Localize(),
            "APP/CAL/ATTENDEE_REJECTED".Localize(),
            "APP/CAL/ATTENDEE_OWNER".Localize(),
        };

        private const string CellIdentifier = "AttendeeTableCell";

        public override nint RowsInSection(UITableView tableview, nint section)
        {
            return AttendeeLists[section].Count;
        }

        public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
        {
            UITableViewCell cell = tableView.DequeueReusableCell(CellIdentifier);

            // if there are no cells to reuse, create a new one
            if (cell == null)
            {
                cell = new UITableViewCell(UITableViewCellStyle.Default, CellIdentifier);
            }

            CalendarEventAttendee friend = AttendeeLists[indexPath.Section][indexPath.Row];
            cell.TextLabel.Text = friend.FirstName + " " + friend.LastName;

            return cell;
        }

        public override nint NumberOfSections(UITableView tableView)
        {
            return 4;
        }

        public override string TitleForHeader(UITableView tableView, nint section)
        {
            return _sectionHeaders[section];
        }
    }

	public partial class AttendeeListViewController : UITableViewController
	{
		public AttendeeListViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            TableView.Source = new AttendeeDataSource();
        }

	    public void AddAttendee(CalendarEventAttendee attendee)
	    {
	        AttendeeDataSource source = TableView.Source as AttendeeDataSource;
	        if (source != null)
	        {
	            source.AttendeeLists[AttendeeDataSource.StatusToList[attendee.Status.Value]].Add(attendee);
	        }
	    }
	}
}
